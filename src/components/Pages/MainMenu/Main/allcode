// AppartamentsBtn.jsx

import React, { useRef } from 'react';
import Lottie from 'lottie-react';
import animationData from '/src/assets/User.json';
import styled from 'styled-components';

const AppartamentsBtnContainer = styled.section`
  flex: 0 0 auto;
  width: ${({ theme }) => theme.sizes.shopButtonWidth};
  aspect-ratio: 1/1;
  background-color: ${({ theme }) => theme.colors.shopButtonBackground};
  border-radius: ${({ theme }) => theme.sizes.shopButtonBorderRadius};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: ${({ theme }) => theme.fonts.sizes.medium};
`;

const AppartamentsBtn = () => {
  const lottieRef = useRef(null);

  const startAnimation = () => {
    if (lottieRef.current) {
      lottieRef.current.goToAndStop(0, true);
      lottieRef.current.play();
    }
  };

  return (
    <AppartamentsBtnContainer onClick={startAnimation}>
      <Lottie
        lottieRef={lottieRef}
        animationData={animationData}
        style={{ width: '80%', height: '80%' }}
        loop={false}
      />
    </AppartamentsBtnContainer>
  );
};

export default AppartamentsBtn;



// CarsBtn.jsx

import React, { useRef } from 'react';
import Lottie from 'lottie-react';
import animationData from '/src/assets/User.json';
import styled from 'styled-components';

const CarsBtnContainer = styled.section`
  flex: 0 0 auto;
  width: ${({ theme }) => theme.sizes.shopButtonWidth};
  aspect-ratio: 1/1;
  background-color: ${({ theme }) => theme.colors.shopButtonBackground};
  border-radius: ${({ theme }) => theme.sizes.shopButtonBorderRadius};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: ${({ theme }) => theme.fonts.sizes.medium};
`;

const CarsBtn = () => {
  const lottieRef = useRef(null);

  const startAnimation = () => {
    if (lottieRef.current) {
      lottieRef.current.goToAndStop(0, true);
      lottieRef.current.play();
    }
  };

  return (
    <CarsBtnContainer onClick={startAnimation}>
      <Lottie
        lottieRef={lottieRef}
        animationData={animationData}
        style={{ width: '80%', height: '80%' }}
        loop={false}
      />
    </CarsBtnContainer>
  );
};

export default CarsBtn;



// EducationBtn.jsx

import React, { useRef } from 'react';
import Lottie from 'lottie-react';
import animationData from '/src/assets/User.json';
import styled from 'styled-components';

const EducationBtnContainer = styled.section`
  flex: 0 0 auto;
  width: ${({ theme }) => theme.sizes.shopButtonWidth};
  aspect-ratio: 1/1;
  background-color: ${({ theme }) => theme.colors.shopButtonBackground};
  border-radius: ${({ theme }) => theme.sizes.shopButtonBorderRadius};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: ${({ theme }) => theme.fonts.sizes.medium};
`;

const EducationBtn = () => {
  const lottieRef = useRef(null);

  const startAnimation = () => {
    if (lottieRef.current) {
      lottieRef.current.goToAndStop(0, true);
      lottieRef.current.play();
    }
  };

  return (
    <EducationBtnContainer onClick={startAnimation}>
      <Lottie
        lottieRef={lottieRef}
        animationData={animationData}
        style={{ width: '80%', height: '80%' }}
        loop={false}
      />
    </EducationBtnContainer>
  );
};

export default EducationBtn;


// AppartamentsPage.jsx

import React, { useState } from 'react';
import { Card, Button } from 'antd';
import { styled } from 'styled-components';
import { DollarOutlined } from '@ant-design/icons';
const { Meta } = Card;
import { AppartamentData } from '../Data';

const AppartamentContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  gap: 20px;
  padding: 20px;
  flex: 1;
  overflow-y: auto;
  width: 100%;

  @media (max-width: 768px) {
    padding: 10px;
    gap: 10px;
  }
`;

const AppartamentPage = () => {
    const [purchasedItems, setPurchasedItems] = useState({});
    
    const handlePurchase = (itemKey) => {
        setPurchasedItems((prev) => ({ ...prev, [itemKey]: true }));
    };

    return (
    <AppartamentContainer>
          {Object.keys(AppartamentData).map((key) => {
            const { image, title, description, price } = AppartamentData[key];
            const isPurchased = purchasedItems[key] || false;
    
            return (
              <Card
                key={key}
                style={{ width: '100%', maxWidth: '300px' }} // Ограничиваем максимальную ширину
                cover={
                  <img
                    alt={title}
                    src={image}
                    style={{ width: '100%', height: '200px', objectFit: 'cover' }}
                  />
                }
                actions={[
                  <Button
                    type="primary"
                    onClick={() => handlePurchase(key)}
                    disabled={isPurchased}
                    style={{
                      width: '100%',
                      height: '50px',
                      fontSize: '15px',
                      display: 'flex',
                      justifyContent: 'center',
                      alignItems: 'center',
                    }}
                  >
                    <span>{isPurchased ? 'Куплено' : price}</span>
                    <DollarOutlined style={{ marginLeft: '8px', fontSize: '20px' }} />
                  </Button>,
                ]}
              >
                <Meta title={title} description={description} />
              </Card>
            );
          })}
        </AppartamentContainer>
    );
};

export default AppartamentPage;






// CarsPage.jsx
import React, { useState } from 'react';
import { Card, Button } from 'antd';
import { styled } from 'styled-components';
import { DollarOutlined } from '@ant-design/icons';
const { Meta } = Card;
import { CarsData } from './Data';

const CarsContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  gap: 20px;
  padding: 20px;
  flex: 1;
  overflow-y: auto;

  @media (max-width: 768px) {
    padding: 10px;
    gap: 10px;
}
`;

const CarsPage = () => {
    const [purchasedItems, setPurchasedItems] = useState({});
    
    const handlePurchase = (itemKey) => {
        setPurchasedItems((prev) => ({ ...prev, [itemKey]: true }));
    };

    return (
    <CarsContainer>
          {Object.keys(CarsData).map((key) => {
            const { image, title, description, price } = CarsData[key];
            const isPurchased = purchasedItems[key] || false;
    
            return (
              <Card
                key={key}
                style={{ width: '100%', maxWidth: '300px' }} // Ограничиваем максимальную ширину
                cover={
                  <img
                    alt={title}
                    src={image}
                    style={{ width: '100%', height: '200px', objectFit: 'cover' }}
                  />
                }
                actions={[
                  <Button
                    type="primary"
                    onClick={() => handlePurchase(key)}
                    disabled={isPurchased}
                    style={{
                      width: '100%',
                      height: '50px',
                      fontSize: '15px',
                      display: 'flex',
                      justifyContent: 'center',
                      alignItems: 'center',
                    }}
                  >
                    <span>{isPurchased ? 'Куплено' : price}</span>
                    <DollarOutlined style={{ marginLeft: '8px', fontSize: '20px' }} />
                  </Button>,
                ]}
              >
                <Meta title={title} description={description} />
              </Card>
            );
          })}
        </CarsContainer>
    );
};

export default CarsPage;






// Data.js
export const AppartamentData = {
    box: {
      image: '/src/assets/main/pages/box.png',
      title: 'Коробка',
      description: 'Квадратная и просторная',
      price: '0$',
    },
    trash: {
        image: '/src/assets/main/pages/trash.png',
        title: 'Мусорный бак',
        description: 'Вонючий, но спасет от дождя',
        price: '3$',
      },
      tent: {
        image: '/src/assets/main/pages/tent.png',
        title: 'Шалаш',
        description: 'Воткнул колышки и ветер не помеха',
        price: '10$',
      },
      basement: {
        image: '/src/assets/main/pages/basement.png',
        title: 'Подвал',
        description: 'Сыро, но тепло',
        price: '10$',
      },
      attic: {
        image: '/src/assets/main/pages/attic.png',
        title: 'Чердак',
        description: 'Можно и голубей покормить и поймать',
        price: '10$',
      },
  };
  
export const EducationData = {
    read: {
      image: '/src/assets/main/pages/box.png',
      title: 'Научиться читать',
      description: 'А..Б..В.. а что дальше?',
      price: '0$',
    },
    thirdgrade: {
        image: '/src/assets/main/pages/trash.png',
        title: '3 класса',
        description: 'Занимательно...',
        price: '3$',
      },
      ninethgrade: {
        image: '/src/assets/main/pages/tent.png',
        title: '9 классов',
        description: 'Подготовлюсь к ОГЭ!',
        price: '10$',
      },
      secondaryeducation: {
        image: '/src/assets/main/pages/basement.png',
        title: 'Среднее образование',
        description: '11 лет позади...',
        price: '10$',
      },
      ptu: {
        image: '/src/assets/main/pages/attic.png',
        title: 'ПТУ',
        description: 'Сварщик - звучит не плохо',
        price: '10$',
      },
  };
  export const CarsData = {
    shoes: {
      image: '/src/assets/main/pages/shoes.png',
      title: 'Туфли',
      description: 'Бархатные тяги будут кстати',
      price: '2$',
    },
    skateboard: {
        image: '/src/assets/main/pages/skateboard.png',
        title: 'Скейт',
        description: 'Козырёк назад и помчали',
        price: '9$',
      },
      bike: {
        image: '/src/assets/main/pages/bike.png',
        title: 'Велосипед',
        description: 'Главное чтобы цепь не слетела',
        price: '20$',
      },
      motorbike: {
        image: '/src/assets/main/pages/motorbike.png',
        title: 'Мотоцикл',
        description: 'Осталось купить косуху',
        price: '100$',
      },
  };









  // EducationPage.jsx
import React, { useState } from 'react';
import { Card, Button } from 'antd';
import { styled } from 'styled-components';
import { DollarOutlined } from '@ant-design/icons';
const { Meta } = Card;
import { EducationData } from './Data';

const EducationContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  gap: 20px;
  padding: 20px;
  flex: 1;
  overflow-y: auto;

   @media (max-width: 768px) {
    padding: 10px;
    gap: 10px;
}
`;

const EducationPage = () => {
    const [purchasedItems, setPurchasedItems] = useState({});
    
    const handlePurchase = (itemKey) => {
        setPurchasedItems((prev) => ({ ...prev, [itemKey]: true }));
    };

    return (
    <EducationContainer>
          {Object.keys(EducationData).map((key) => {
            const { image, title, description, price } = EducationData[key];
            const isPurchased = purchasedItems[key] || false;
    
            return (
              <Card
                key={key}
                style={{ width: '100%', maxWidth: '300px' }} // Ограничиваем максимальную ширину
                cover={
                  <img
                    alt={title}
                    src={image}
                    style={{ width: '100%', height: '200px', objectFit: 'cover' }}
                  />
                }
                actions={[
                  <Button
                    type="primary"
                    onClick={() => handlePurchase(key)}
                    disabled={isPurchased}
                    style={{
                      width: '100%',
                      height: '50px',
                      fontSize: '15px',
                      display: 'flex',
                      justifyContent: 'center',
                      alignItems: 'center',
                    }}
                  >
                    <span>{isPurchased ? 'Куплено' : price}</span>
                    <DollarOutlined style={{ marginLeft: '8px', fontSize: '20px' }} />
                  </Button>,
                ]}
              >
                <Meta title={title} description={description} />
              </Card>
            );
          })}
        </EducationContainer>
    );
};

export default EducationPage;




// import React, { useState } from 'react';
// import { Card, Button } from 'antd';
// import { DollarOutlined } from '@ant-design/icons';
// const { Meta } = Card;
// import { EducationData } from './Data';

// const EducationPage = () => {
//     const [purchasedItems, setPurchasedItems] = useState({});
//     const handlePurchase = (itemKey) => {
//         setPurchasedItems((prev) => ({ ...prev, [itemKey]: true }));
//       };

//     return (
//         <div style={{ 
//           display: 'flex', 
//           flexWrap: 'nowrap', 
//           justifyContent: 'center',
//           alignItems: 'center',   
//           flexDirection: 'column',       }}>
//           {Object.keys(EducationData).map((key) => {
//             const { image, title, description, price } = EducationData[key];
//             const isPurchased = purchasedItems[key] || false;
    
//             return (
//               <Card
//                 key={key}
//                 style={{ width: 300 }}
//                 cover={<img 
//                   alt={title} 
//                   src={image} 
//                   style={{ width: '40%', margin: '0 auto' }}/>}
//                 actions={[
//                   <Button
//                     type="primary"
//                     onClick={() => handlePurchase(key)}
//                     disabled={isPurchased}
//                     style={{
//                       width: '100%',
//                       height: '100%',
//                       fontSize: '15px',
//                       objectFit: 'cover',
//                       margin: '0',
//                       display: 'flex',
//                       flexWrap: 'wrap',
//                       justifyContent: 'center',
//                       alignItems: 'center',
//                     }}
//                   >
//                     <span style={{ marginRight: '0px' }}>{isPurchased ? 'Куплено' : price}</span>
//                     <DollarOutlined style={{ fontSize: '20px' }} />
//                   </Button>,
//                 ]}
//               >
//                 <Meta title={title} description={description} />
//               </Card>
//             );
//           })}
//         </div>
//   );
// };
// export default EducationPage;









// AnimatedPage.jsx
import React from 'react';
import { motion } from 'framer-motion';
import styled from 'styled-components';

const AnimatedDiv = styled(motion.div)`
  width: 100%;
  height: 100%;
  /* Добавьте дополнительные стили по необходимости */
`;

const AnimatedPage = ({ children }) => {
  return (
    <AnimatedDiv
      initial={{ opacity: 0, x: 50 }}
      animate={{ opacity: 1, x: 0 }}
      exit={{ opacity: 0, x: -50 }}
      transition={{ duration: 0.3 }}
    >
      {children}
    </AnimatedDiv>
  );
};

export default AnimatedPage;





// Background.jsx

import React from 'react';
import { NavLink } from 'react-router-dom';
import styled from 'styled-components';

const BackgroundButton = styled(NavLink)`
  background-color: ${({ theme }) => theme.colors.shopButtonBackground};
  border: none;
  color: ${({ theme }) => theme.colors.shopButtonTextColor};
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  width: ${({ theme }) => theme.sizes.shopButtonWidth};
  aspect-ratio: 1 / 1;
  border-radius: ${({ theme }) => theme.sizes.shopButtonBorderRadius};
  text-decoration: none;
  margin: ${({ theme }) => theme.sizes.shopButtonMargin};
  &:hover {
    background-color: ${({ theme }) => theme.colors.shopButtonHoverBackground};
  }
  &.active {
    background-color: ${({ theme }) => theme.colors.shopButtonHoverBackground};
  }
`;

const BackgroundSection = styled.section`
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: row;
  flex-wrap: wrap;
  // background-color: ${({ theme }) => theme.colors.background};
  height: 100%;
  width: 100%;
`;

const Background = () => {
  return (
    <BackgroundSection>
      <BackgroundButton to="appartaments" aria-label="Appartaments">
        Appartaments
      </BackgroundButton>
      <BackgroundButton to="education" aria-label="Education">
        Education
      </BackgroundButton>
      <BackgroundButton to="cars" aria-label="Cars">
        Cars
      </BackgroundButton>
    </BackgroundSection>
  );
};

export default Background;









// Main.jsx
import React from 'react';
import { Routes, Route, useLocation } from 'react-router-dom';
import styled from 'styled-components';
import { AnimatePresence, motion } from 'framer-motion';
import AnimatedPage from './AnimatedPage';

// Импорт страниц
import AppartamentsPage from './Pages/AppartamentsPage/AppartamentsPage.jsx';
import EducationPage from './Pages/EducationPage.jsx';
import CarsPage from './Pages/CarsPage.jsx';
import ExchangePage from '../Footer/Pages/ExchangePage/ExchangePage.jsx';
import FunPage from '../Footer/Pages/FunPage/FunPage.jsx';
import HealthPage from '../Footer/Pages/HealthPage/HealthPage.jsx';
import FoodPage from '../Footer/Pages/FoodPage/FoodPage.jsx';
import ShopPage from '../Footer/Pages/ShopPage/ShopPage.jsx';
import Background from './Background.jsx';

const MainSection = styled.main`
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
`;

const MainBodySection = styled.section`
  display: flex;
  flex-direction: column;
  flex: 1;
  width: 100%;
  align-items: center;
  position: relative; /* Добавлено для анимации */
`;

const Main = () => {
  const location = useLocation();

  return (
    <MainSection>
      <MainBodySection>
        <AnimatePresence mode="wait" initial={false}>
          <Routes location={location} key={location.pathname}>
            <Route
              path="/appartaments"
              element={
                <AnimatedPage>
                  <AppartamentsPage />
                </AnimatedPage>
              }
            />
            <Route
              path="education"
              element={
                <AnimatedPage>
                  <EducationPage />
                </AnimatedPage>
              }
            />
            <Route
              path="cars"
              element={
                <AnimatedPage>
                  <CarsPage />
                </AnimatedPage>
              }
            />
            {/* Другие маршруты */}
            <Route
              path="exchange"
              element={
                <AnimatedPage>
                  <ExchangePage />
                </AnimatedPage>
              }
            />
            <Route
              path="health"
              element={
                <AnimatedPage>
                  <HealthPage />
                </AnimatedPage>
              }
            />
            <Route
              path="fun"
              element={
                <AnimatedPage>
                  <FunPage />
                </AnimatedPage>
              }
            />
            <Route
              path="food"
              element={
                <AnimatedPage>
                  <FoodPage />
                </AnimatedPage>
              }
            />
            <Route
              path="shop"
              element={
                <AnimatedPage>
                  <ShopPage />
                </AnimatedPage>
              }
            />
            {/* Маршрут по умолчанию */}
            <Route
              path="*"
              element={
                <AnimatedPage>
                  <Background/>
                </AnimatedPage>
              }
            />
          </Routes>
        </AnimatePresence>
      </MainBodySection>
    </MainSection>
  );
};

export default Main;
